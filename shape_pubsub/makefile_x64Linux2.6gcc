CPP= g++
CPPFLAGS = -c -Wall -fpic -m64 -O2 -std=c++0x
LN= g++
AR=ar
LDFLAGS= -m64
SYSLIBS= -ldl -lnsl -lm -lpthread -lrt
DEFINES= 

INCLUDES= -I. 

LIBS =  -lfastcdr -lfastrtps $(SYSLIBS)

DIRECTORIES= output.dir output/x64Linux2.6gcc.dir lib.dir lib/x64Linux2.6gcc.dir bin.dir bin/x64Linux2.6gcc.dir

all: $(DIRECTORIES) Shape ShapePublisherSubscriber


Shape_TARGET= lib/x64Linux2.6gcc/libShape.so
Shape_TARGET_Z= lib/x64Linux2.6gcc/libShape.a

Shape_CLIENT_EXAMPLE_TARGET= bin/x64Linux2.6gcc/ShapePublisherSubscriber
Shape_COMMON_SRC_CXXFILES = Shape.cxx

Shape_COMMON_SRC_CPPFILES=

Shape_CLIENTSOURCES = ShapePubSubTypes.cxx \
	ShapePublisher.cxx \
	ShapeSubscriber.cxx \
	ShapePubSubMain.cxx

Shape_COMMONOBJS    = $(Shape_COMMON_SRC_CXXFILES:%.cxx=output/x64Linux2.6gcc/%.o) $(Shape_COMMON_SRC_CPPFILES:%.cpp=output/x64Linux2.6gcc/%.o)

Shape_CLIENTOBJS    = $(Shape_CLIENTSOURCES:%.cxx=output/x64Linux2.6gcc/%.o)

ShapeOBJS+= $(Shape_COMMONOBJS) $(Shape_CLIENTOBJS)
OBJS+= $(ShapeOBJS)

$(Shape_TARGET): $(Shape_COMMONOBJS)
	$(LN) $(LDFLAGS) -shared -o $(Shape_TARGET) $(Shape_COMMONOBJS) $(LIBS) -Llib/x64Linux2.6gcc 

$(Shape_TARGET_Z): $(Shape_COMMONOBJS)
	$(AR) -cru $(Shape_TARGET_Z) $(Shape_COMMONOBJS)

$(Shape_CLIENT_EXAMPLE_TARGET): $(ShapeOBJS) lib/x64Linux2.6gcc/libShape.a 
	$(LN) $(LDFLAGS) -o $@ $(ShapeOBJS) -Wl,-Bstatic -Llib/x64Linux2.6gcc -lShape  -Wl,-Bdynamic $(LIBS)

ShapePublisherSubscriber : $(Shape_CLIENT_EXAMPLE_TARGET)
Shape: $(Shape_TARGET) $(Shape_TARGET_Z) ShapePublisherSubscriber

output/x64Linux2.6gcc/%.o:%.cxx
	$(CPP) $(CPPFLAGS) $(INCLUDES) $(DEFINES) -c $< -o $@

output/x64Linux2.6gcc/%.o:%.cpp
	$(CPP) $(CPPFLAGS) $(INCLUDES) $(DEFINES) -c $< -o $@

.PHONY: Shape ShapePublisherSubscriber

clean:
	@rm -f $(OBJS)

%.dir : 
	@echo "Checking directory $*"
	@if [ ! -d $* ]; then \
		echo "Making directory $*"; \
		mkdir -p $* ; \
	fi;
